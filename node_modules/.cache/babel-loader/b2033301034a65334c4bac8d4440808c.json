{"ast":null,"code":"var _jsxFileName = \"/home/saransh/Kanban/src/Components/Editabled/Editable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { X } from \"react-feather\";\nimport \"./Editable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editable(props) {\n  _s();\n\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = e => {\n    e.preventDefault();\n\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n\n    setIsEditable(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editable\",\n    children: isEditable ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `editable_edit ${props.editClass ? props.editClass : \"\"}`,\n      onSubmit: submission,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        placeholder: props.placeholder || props.text,\n        onChange: event => setInputText(event.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editable_edit_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: props.buttonText || \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(X, {\n          onClick: () => setIsEditable(false),\n          className: \"closeIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `editable_display ${props.displayClass ? props.displayClass : \"\"}`,\n      onClick: () => setIsEditable(true),\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editable, \"UY2Hqm+K8HZhaVdExiLswsgXfP4=\");\n\n_c = Editable;\nexport default Editable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editable\");","map":{"version":3,"sources":["/home/saransh/Kanban/src/Components/Editabled/Editable.js"],"names":["React","useState","X","Editable","props","isEditable","setIsEditable","inputText","setInputText","defaultValue","submission","e","preventDefault","onSubmit","editClass","placeholder","text","event","target","value","buttonText","displayClass"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,CAAT,QAAkB,eAAlB;AAEA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACG,KAAK,CAACK,YAAN,IAAsB,EAAvB,CAA1C;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIL,SAAS,IAAIH,KAAK,CAACS,QAAvB,EAAiC;AAC/BL,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAJ,MAAAA,KAAK,CAACS,QAAN,CAAeN,SAAf;AACD;;AACDD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGD,UAAU,gBACT;AACE,MAAA,SAAS,EAAG,iBAAgBD,KAAK,CAACU,SAAN,GAAkBV,KAAK,CAACU,SAAxB,GAAoC,EAAG,EADrE;AAEE,MAAA,QAAQ,EAAEJ,UAFZ;AAAA,8BAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEH,SAFT;AAGE,QAAA,WAAW,EAAEH,KAAK,CAACW,WAAN,IAAqBX,KAAK,CAACY,IAH1C;AAIE,QAAA,QAAQ,EAAGC,KAAD,IAAWT,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJnC;AAKE,QAAA,SAAS;AALX;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,oBAAuBf,KAAK,CAACgB,UAAN,IAAoB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,CAAD;AAAG,UAAA,OAAO,EAAE,MAAMd,aAAa,CAAC,KAAD,CAA/B;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAkBT;AACE,MAAA,SAAS,EAAG,oBACVF,KAAK,CAACiB,YAAN,GAAqBjB,KAAK,CAACiB,YAA3B,GAA0C,EAC3C,EAHH;AAIE,MAAA,OAAO,EAAE,MAAMf,aAAa,CAAC,IAAD,CAJ9B;AAAA,gBAMGF,KAAK,CAACY;AANT;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA5CQb,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { X } from \"react-feather\";\n\nimport \"./Editable.css\";\n\nfunction Editable(props) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = (e) => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n\n  return (\n    <div className=\"editable\">\n      {isEditable ? (\n        <form\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\n          onSubmit={submission}\n        >\n          <input\n            type=\"text\"\n            value={inputText}\n            placeholder={props.placeholder || props.text}\n            onChange={(event) => setInputText(event.target.value)}\n            autoFocus\n          />\n          <div className=\"editable_edit_footer\">\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\n          </div>\n        </form>\n      ) : (\n        <p\n          className={`editable_display ${\n            props.displayClass ? props.displayClass : \"\"\n          }`}\n          onClick={() => setIsEditable(true)}\n        >\n          {props.text}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Editable;\n"]},"metadata":{},"sourceType":"module"}