{"ast":null,"code":"var _jsxFileName = \"/home/saransh/Kanban/src/Components/Card/CardInfo/CardInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar, CheckSquare, List, Tag, Trash, Type, X } from \"react-feather\";\nimport Modal from \"../../Modal/Modal\";\nimport Editable from \"../../Editabled/Editable\";\nimport \"./CardInfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardInfo(props) {\n  _s();\n\n  var _values$labels, _values$tasks4;\n\n  const colors = [\"#a8193d\", \"#4fcc25\", \"#1ebffa\", \"#8da377\", \"#9975bd\", \"#cf61a1\", \"#240959\"];\n  const [selectedColor, setSelectedColor] = useState();\n  const [values, setValues] = useState({ ...props.card\n  });\n\n  const updateTitle = value => {\n    setValues({ ...values,\n      title: value\n    });\n  };\n\n  const updateDesc = value => {\n    setValues({ ...values,\n      desc: value\n    });\n  };\n\n  const addLabel = label => {\n    const index = values.labels.findIndex(item => item.text === label.text);\n    if (index > -1) return;\n    setSelectedColor(\"\");\n    setValues({ ...values,\n      labels: [...values.labels, label]\n    });\n  };\n\n  const removeLabel = label => {\n    const tempLabels = values.labels.filter(item => item.text !== label.text);\n    setValues({ ...values,\n      labels: tempLabels\n    });\n  };\n\n  const addTask = value => {\n    const task = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value\n    };\n    setValues({ ...values,\n      tasks: [...values.tasks, task]\n    });\n  };\n\n  const removeTask = id => {\n    const tasks = [...values.tasks];\n    const tempTasks = tasks.filter(item => item.id !== id);\n    setValues({ ...values,\n      tasks: tempTasks\n    });\n  };\n\n  const updateTask = (id, value) => {\n    const tasks = [...values.tasks];\n    const index = tasks.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tasks[index].completed = value;\n    setValues({ ...values,\n      tasks\n    });\n  };\n\n  const calculatePercent = () => {\n    var _values$tasks, _values$tasks2, _values$tasks2$filter, _values$tasks3;\n\n    if (!((_values$tasks = values.tasks) === null || _values$tasks === void 0 ? void 0 : _values$tasks.length)) return 0;\n    const completed = (_values$tasks2 = values.tasks) === null || _values$tasks2 === void 0 ? void 0 : (_values$tasks2$filter = _values$tasks2.filter(item => item.completed)) === null || _values$tasks2$filter === void 0 ? void 0 : _values$tasks2$filter.length;\n    return completed / ((_values$tasks3 = values.tasks) === null || _values$tasks3 === void 0 ? void 0 : _values$tasks3.length) * 100;\n  };\n\n  const updateDate = date => {\n    if (!date) return;\n    setValues({ ...values,\n      date\n    });\n  };\n\n  useEffect(() => {\n    if (props.updateCard) props.updateCard(props.boardId, values.id, values);\n  }, [values]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_title\",\n          children: [/*#__PURE__*/_jsxDEV(Type, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editable, {\n          defaultValue: values.title,\n          text: values.title,\n          placeholder: \"Enter Title\",\n          onSubmit: updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_title\",\n          children: [/*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editable, {\n          defaultValue: values.desc,\n          text: values.desc || \"Add a Description\",\n          placeholder: \"Enter description\",\n          onSubmit: updateDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_title\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          defaultValue: values.date,\n          min: new Date().toISOString().substr(0, 10),\n          onChange: event => updateDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_title\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Labels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_labels\",\n          children: (_values$labels = values.labels) === null || _values$labels === void 0 ? void 0 : _values$labels.map((item, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              backgroundColor: item.color,\n              color: \"#fff\"\n            },\n            children: [item.text, /*#__PURE__*/_jsxDEV(X, {\n              onClick: () => removeLabel(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              backgroundColor: item\n            },\n            className: selectedColor === item ? \"li_active\" : \"\",\n            onClick: () => setSelectedColor(item)\n          }, index + item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editable, {\n          text: \"Add Label\",\n          placeholder: \"Enter label text\",\n          onSubmit: value => addLabel({\n            color: selectedColor,\n            text: value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_title\",\n          children: [/*#__PURE__*/_jsxDEV(CheckSquare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardinfo_box_progress\",\n            style: {\n              width: `${calculatePercent()}%`,\n              backgroundColor: calculatePercent() === 100 ? \"limegreen\" : \"\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo_box_task_list\",\n          children: (_values$tasks4 = values.tasks) === null || _values$tasks4 === void 0 ? void 0 : _values$tasks4.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardinfo_box_task_checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              defaultChecked: item.completed,\n              onChange: event => updateTask(item.id, event.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: item.completed ? \"completed\" : \"\",\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Trash, {\n              onClick: () => removeTask(item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editable, {\n          text: \"Add a Task\",\n          placeholder: \"Enter task\",\n          onSubmit: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardInfo, \"8UgnmQZ3KZPf+14tpkfvPtXUnYU=\");\n\n_c = CardInfo;\nexport default CardInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"sources":["/home/saransh/Kanban/src/Components/Card/CardInfo/CardInfo.js"],"names":["React","useEffect","useState","Calendar","CheckSquare","List","Tag","Trash","Type","X","Modal","Editable","CardInfo","props","colors","selectedColor","setSelectedColor","values","setValues","card","updateTitle","value","title","updateDesc","desc","addLabel","label","index","labels","findIndex","item","text","removeLabel","tempLabels","filter","addTask","task","id","Date","now","Math","random","completed","tasks","removeTask","tempTasks","updateTask","calculatePercent","length","updateDate","date","updateCard","boardId","onClose","toISOString","substr","event","target","map","backgroundColor","color","width","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Calendar,\n  CheckSquare,\n  List,\n  Tag,\n  Trash,\n  Type,\n  X,\n} from \"react-feather\";\n\nimport Modal from \"../../Modal/Modal\";\nimport Editable from \"../../Editabled/Editable\";\n\nimport \"./CardInfo.css\";\n\nfunction CardInfo(props) {\n  const colors = [\n    \"#a8193d\",\n    \"#4fcc25\",\n    \"#1ebffa\",\n    \"#8da377\",\n    \"#9975bd\",\n    \"#cf61a1\",\n    \"#240959\",\n  ];\n\n  const [selectedColor, setSelectedColor] = useState();\n  const [values, setValues] = useState({\n    ...props.card,\n  });\n\n  const updateTitle = (value) => {\n    setValues({ ...values, title: value });\n  };\n\n  const updateDesc = (value) => {\n    setValues({ ...values, desc: value });\n  };\n\n  const addLabel = (label) => {\n    const index = values.labels.findIndex((item) => item.text === label.text);\n    if (index > -1) return;\n\n    setSelectedColor(\"\");\n    setValues({\n      ...values,\n      labels: [...values.labels, label],\n    });\n  };\n\n  const removeLabel = (label) => {\n    const tempLabels = values.labels.filter((item) => item.text !== label.text);\n\n    setValues({\n      ...values,\n      labels: tempLabels,\n    });\n  };\n\n  const addTask = (value) => {\n    const task = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value,\n    };\n    setValues({\n      ...values,\n      tasks: [...values.tasks, task],\n    });\n  };\n\n  const removeTask = (id) => {\n    const tasks = [...values.tasks];\n\n    const tempTasks = tasks.filter((item) => item.id !== id);\n    setValues({\n      ...values,\n      tasks: tempTasks,\n    });\n  };\n\n  const updateTask = (id, value) => {\n    const tasks = [...values.tasks];\n\n    const index = tasks.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tasks[index].completed = value;\n\n    setValues({\n      ...values,\n      tasks,\n    });\n  };\n\n  const calculatePercent = () => {\n    if (!values.tasks?.length) return 0;\n    const completed = values.tasks?.filter((item) => item.completed)?.length;\n    return (completed / values.tasks?.length) * 100;\n  };\n\n  const updateDate = (date) => {\n    if (!date) return;\n\n    setValues({\n      ...values,\n      date,\n    });\n  };\n\n  useEffect(() => {\n    if (props.updateCard) props.updateCard(props.boardId, values.id, values);\n  }, [values]);\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className=\"cardinfo\">\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Type />\n            <p>Title</p>\n          </div>\n          <Editable\n            defaultValue={values.title}\n            text={values.title}\n            placeholder=\"Enter Title\"\n            onSubmit={updateTitle}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <List />\n            <p>Description</p>\n          </div>\n          <Editable\n            defaultValue={values.desc}\n            text={values.desc || \"Add a Description\"}\n            placeholder=\"Enter description\"\n            onSubmit={updateDesc}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Calendar />\n            <p>Date</p>\n          </div>\n          <input\n            type=\"date\"\n            defaultValue={values.date}\n            min={new Date().toISOString().substr(0, 10)}\n            onChange={(event) => updateDate(event.target.value)}\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <Tag />\n            <p>Labels</p>\n          </div>\n          <div className=\"cardinfo_box_labels\">\n            {values.labels?.map((item, index) => (\n              <label\n                key={index}\n                style={{ backgroundColor: item.color, color: \"#fff\" }}\n              >\n                {item.text}\n                <X onClick={() => removeLabel(item)} />\n              </label>\n            ))}\n          </div>\n          <ul>\n            {colors.map((item, index) => (\n              <li\n                key={index + item}\n                style={{ backgroundColor: item }}\n                className={selectedColor === item ? \"li_active\" : \"\"}\n                onClick={() => setSelectedColor(item)}\n              />\n            ))}\n          </ul>\n          <Editable\n            text=\"Add Label\"\n            placeholder=\"Enter label text\"\n            onSubmit={(value) =>\n              addLabel({ color: selectedColor, text: value })\n            }\n          />\n        </div>\n\n        <div className=\"cardinfo_box\">\n          <div className=\"cardinfo_box_title\">\n            <CheckSquare />\n            <p>Tasks</p>\n          </div>\n          <div className=\"cardinfo_box_progress-bar\">\n            <div\n              className=\"cardinfo_box_progress\"\n              style={{\n                width: `${calculatePercent()}%`,\n                backgroundColor: calculatePercent() === 100 ? \"limegreen\" : \"\",\n              }}\n            />\n          </div>\n          <div className=\"cardinfo_box_task_list\">\n            {values.tasks?.map((item) => (\n              <div key={item.id} className=\"cardinfo_box_task_checkbox\">\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={item.completed}\n                  onChange={(event) =>\n                    updateTask(item.id, event.target.checked)\n                  }\n                />\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\n                <Trash onClick={() => removeTask(item.id)} />\n              </div>\n            ))}\n          </div>\n          <Editable\n            text={\"Add a Task\"}\n            placeholder=\"Enter task\"\n            onSubmit={addTask}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default CardInfo;\n"]},"metadata":{},"sourceType":"module"}