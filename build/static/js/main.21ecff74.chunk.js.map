{"version":3,"sources":["Components/Card/Card.js","Components/Editabled/Editable.js","Components/Board/Board.js","App.js","index.js"],"names":["Card","props","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_props$card","card","id","title","desc","priority","tag","_jsxs","_Fragment","children","_jsx","CardInfo","onClose","boardId","updateCard","className","draggable","onDragEnd","dragEnded","onDragEnter","dragEntered","Editable","isEditable","setIsEditable","_useState3","defaultValue","_useState4","inputText","setInputText","concat","editClass","onSubmit","e","preventDefault","type","value","placeholder","text","onChange","event","target","autoFocus","buttonText","X","onClick","displayClass","ASC","sortByPriority","a","b","order","arguments","length","undefined","diff","sortByTitle","toLowerCase","localeCompare","Board","_props$board3","_props$board4","_props$board4$cards","_props$board5","_props$board5$cards","_props$board2","_props$board2$cards","_props$board","_props$board$cards","sortPriority","board","cards","sort","map","item","removeCard","_props$board6","addCard","App","setData","setSortPriority","useEffect","fetch","then","response","json","responseData","handleData","catch","error","console","_useState5","_useState6","user_board","set_user_board","_useState7","_useState8","priority_board","set_priority_board","_useState9","_useState10","status_board","set_status_board","priority_map","log","tickets","ticket","findIndex","userId","addCardss","tempBoards","idd","Date","now","Math","random","push","status","name","set_board","index","_toConsumableArray","obj","user","_useState11","_useState12","boards","setBoards","_useState13","bid","cid","_useState14","targetCard","setTargetCard","addCardHandler","titlee","descc","cardIndex","splice","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","localStorage","setItem","JSON","stringify","disabled","selected","removeBoard","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21ecff74.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Card.css\";\nimport CardInfo from \"./CardInfo/CardInfo\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n\n  const { id, title,desc,tag,priority} = props.card;\n  return (\n    <>\n      {showModal && (\n        <CardInfo\n          onClose={() => setShowModal(false)}\n          card={props.card}\n          boardId={props.boardId}\n          updateCard={props.updateCard}\n        />\n      )}\n      <div\n        className=\"card\"\n        draggable\n        onDragEnd={() => props.dragEnded(props.boardId, id)}\n        onDragEnter={() => props.dragEntered(props.boardId, id)}\n      >\n\n        <div className=\"card_title\">{title}</div>\n        <div className=\"card_desc\">{desc}</div>\n        <div className=\"card_tag\">\n          <div className=\"feature_bullet\"></div>\n          <div className=\"card_tag\">Feature Request</div>\n        </div>\n        <div className=\"card_tag\">Priority : {priority}</div>\n\n\n              \n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\n\nimport { X } from \"react-feather\";\n\nimport \"./Editable.css\";\n\nfunction Editable(props) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = (e) => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n\n  return (\n    <div className=\"editable\">\n      {isEditable ? (\n        <form\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\n          onSubmit={submission}\n        >\n          <input\n            type=\"text\"\n            value={inputText}\n            placeholder={props.placeholder || props.text}\n            onChange={(event) => setInputText(event.target.value)}\n            autoFocus\n          />\n          <div className=\"editable_edit_footer\">\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\n          </div>\n        </form>\n      ) : (\n        <p\n          className={`editable_display ${\n            props.displayClass ? props.displayClass : \"\"\n          }`}\n          onClick={() => setIsEditable(true)}\n        >\n          {props.text}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Editable;\n","// import React, { useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport Editable from \"../Editabled/Editable\";\n\nimport \"./Board.css\";\n\nconst ASC = 'ascending';\nfunction sortByPriority(a, b, order = ASC) {\n    const diff = a.priority - b.priority;\n\n    if (order === ASC) {\n        return diff;\n    }\n\n    return -1 * diff;\n}\n\nfunction sortByTitle(a, b, order = ASC) {\n    if(a.title.length!=b.title.length) return a.title.length > b.title.length;\n    const diff = a.title.toLowerCase().localeCompare(b.title.toLowerCase());\n\n    if (order === ASC) {\n        return diff;\n    }\n\n    return -1 * diff;\n}\n\n\nfunction Board(props) {\n  // const [showDropdown, setShowDropdown] = useState(false);\n  const sortPriority = props.sortPriority;\n\n  // console.log(props.board?.cards?.sort(sortByTitle));   \n\n  if(!sortPriority){\n    props.board?.cards?.sort(sortByTitle)\n  }\n  else{\n    props.board?.cards?.sort(sortByPriority)\n  }\n\n  return (\n    <div className=\"board\">\n      <div className=\"board_header\">\n        <p className=\"board_header_title\">\n          {props.board?.title}\n          <span>{props.board?.cards?.length || 0}</span>\n        </p>\n        {/* <div\n          className=\"board_header_title_more\"\n          onClick={() => setShowDropdown(true)}\n        >\n          <MoreHorizontal />\n          {showDropdown && (\n            <Dropdown\n              class=\"board_dropdown\"\n              onClose={() => setShowDropdown(false)}\n            >\n              <p onClick={() => props.removeBoard()}>Delete Board</p>\n            </Dropdown>\n          )}\n        </div> */}\n      </div>\n      <div className=\"board_cards custom-scroll\">\n        {props.board?.cards?.map((item) => (\n          <Card \n            key={item.id}\n            desc={item.desc}\n            card={item}\n            boardId={props.board.id}\n            removeCard={props.removeCard}\n            dragEntered={props.dragEntered}\n            dragEnded={props.dragEnded}\n            updateCard={props.updateCard}\n          />\n          \n        ))}\n        <Editable\n          text=\"+ Add Card\"\n          placeholder=\"Enter Card Title\"\n          displayClass=\"board_add-card\"\n          editClass=\"board_add-card_edit\"\n          onSubmit={(value) => props.addCard(props.board?.id, value)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useEffect, useState } from \"react\";\n\nimport Board from \"./Components/Board/Board\";\n\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [sortPriority, setSortPriority] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the API and store it in the 'data' state\n    fetch(\"https://api.quicksell.co/v1/internal/frontend-assignment\")\n      .then((response) => response.json())\n      .then((responseData) => handleData(responseData))\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  const [user_board, set_user_board] = useState([]);\n  const [priority_board, set_priority_board] = useState([]);\n  const [status_board, set_status_board] = useState([]);\n  const priority_map = {\n    0 : \"No Priority\",\n    1 : \"Low\",\n    2 : \"medium\",\n    3 : \"High\",\n    4 : \"Urgent\"\n  };\n\n  const handleData = (responseData) => {\n    console.log(responseData);\n    setData(responseData);\n    {\n      responseData.tickets.map((ticket) => {\n        var uindex = user_board.findIndex(\n          (item) => item.title === ticket.userId\n        );\n        if (uindex != -1) {\n          addCardss(ticket.userId, user_board, ticket, set_user_board);\n        } else {\n          let tempBoards = user_board;\n          let idd = Date.now() + Math.random() * 2;\n          tempBoards.push({\n            id: idd,\n            title: ticket.userId,\n            cards: [],\n          });\n          set_user_board(tempBoards);\n          addCardss(ticket.userId, user_board, ticket, set_user_board);\n        }\n\n        var sindex = status_board.findIndex(\n          (item) => item.title === ticket.status\n        );\n        if (sindex != -1) {\n          addCardss(ticket.status, status_board, ticket, set_status_board);\n        } else {\n          let tempBoards = status_board;\n          let idd = Date.now() + Math.random() * 2;\n          tempBoards.push({\n            id: idd,\n            title: ticket.status,\n            cards: [],\n          });\n          set_status_board(tempBoards);\n          addCardss(ticket.status, status_board, ticket, set_status_board);\n        }\n\n        var pindex = priority_board.findIndex(\n          (item) => item.title === priority_map[ticket.priority]\n        );\n        if (pindex != -1) {\n          addCardss(\n            priority_map[ticket.priority],\n            priority_board,\n            ticket,\n            set_priority_board\n          );\n        } else {\n          let tempBoards = priority_board;\n          let idd = Date.now() + Math.random() * 2;\n          tempBoards.push({\n            id: idd,\n            title:  priority_map[ticket.priority],\n            cards: [],\n          });\n          set_priority_board(tempBoards);\n          addCardss(\n            priority_map[ticket.priority],\n            priority_board,\n            ticket,\n            set_priority_board\n          );\n        }\n      });\n    }\n  };\n\n  const addCardss = (name, board, card, set_board) => {\n    console.log(\"red\", name, board, card);\n    const index = board.findIndex((item) => item.title == name);\n    console.log(index);\n    if (index < 0) return;\n    let tempBoards = [...board];\n    console.log(\"reached\");\n    // console.log(...card, \"erere\");\n    const obj = {\n      id: Date.now() + Math.random() * 2,\n      title: card.id,\n      desc: card.title,\n      user: card.userId,\n      status: card.status,\n      tag: card.tag[0],\n      priority: card.priority,\n    };\n    console.log(\"onject\", obj);\n    tempBoards[index].cards.push(obj);\n    set_board(tempBoards);\n  };\n\n  const [boards, setBoards] = useState(status_board);\n\n  // console.log(data);\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, titlee, descc, user, status, tag, priority) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n    // console.log(descc);\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title: titlee,\n      desc: descc,\n      user,\n      status,\n      tag,\n      priority,\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  function abbc() {\n    // console.log(\"fsadfad\");\n    setSortPriority(true);\n  }\n  function bbbc() {\n    // console.log(\"dsffsfs\");\n    setSortPriority(false);\n  }\n  function setUser() {\n    setBoards(user_board);\n  }\n  function setPriority() {\n    setBoards(priority_board);\n  }\n  function setStatus() {\n    setBoards(status_board);\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_nav\">\n        <h1>Quicksell</h1>\n        <br></br>\n        <h3>Saransh Bansal</h3>\n        <br></br>\n\n        <select name=\"language\" id=\"language\" className=\"dropdownn\">\n          <option value=\"Sorting\" disabled selected>\n            Sorting\n          </option>\n          <option value=\"Name\" onClick={bbbc}>\n            Name\n          </option>\n          <option value=\"Priority\" onClick={abbc}>\n            Priority\n          </option>\n        </select>\n\n        <select name=\"language\" id=\"language\" className=\"dropdownn\">\n          <option value=\"Grouping\" disabled selected>\n            Grouping\n          </option>\n          <option value=\"User\" onClick={setUser}>\n            User\n          </option>\n          <option value=\"Status\" onClick={setStatus}>\n            Status\n          </option>\n          <option value=\"Priority\" onClick={setPriority}>\n            Priority\n          </option>\n        </select>\n      </div>\n      <div className=\"app_boards_container\">\n        <div className=\"app_boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              addCard={addCardHandler}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              dragEnded={dragEnded}\n              dragEntered={dragEntered}\n              updateCard={updateCard}\n              sortPriority={sortPriority}\n            />\n          ))}\n          <div className=\"app_boards_last\">\n            <Editable\n              displayClass=\"app_boards_add-board\"\n              editClass=\"app_boards_add-board_edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}