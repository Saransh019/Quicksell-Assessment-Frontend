{"ast":null,"code":"var _jsxFileName = \"/home/saransh/Kanban/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const statusMap = {\n    \"Todo\": 0,\n    \"In progress\": 1,\n    \"Backlog\": 2,\n    \"Cancelled\": 4\n  };\n  useEffect(() => {\n    // Fetch data from the API and store it in the 'data' state\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment').then(response => response.json()).then(responseData => addCards(responseData)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  function addCards(responseData) {\n    // if(!data) return;\n    setData(responseData);\n    {\n      data.tickets.map(ticket => {\n        // console.log(ticket);\n        let idd = statusMap[ticket.status];\n        addCardHandler(idd, ticket.id);\n      });\n    }\n    return;\n  }\n\n  ;\n  const [boards, setBoards] = useState([{\n    id: 0,\n    title: \"Todo\",\n    cards: []\n  }, {\n    id: 1,\n    title: \"In Progress\",\n    cards: []\n  }, {\n    id: 2,\n    title: \"Done\",\n    cards: []\n  }, {\n    id: 3,\n    title: \"Cancelled\",\n    cards: []\n  }]);\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n\n  const addboardHandler = name => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeBoard = id => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_boards_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_boards\",\n        children: [boards.map(item => /*#__PURE__*/_jsxDEV(Board, {\n          board: item,\n          addCard: addCardHandler,\n          removeBoard: () => removeBoard(item.id),\n          removeCard: removeCard,\n          dragEnded: dragEnded,\n          dragEntered: dragEntered,\n          updateCard: updateCard\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_boards_last\",\n          children: /*#__PURE__*/_jsxDEV(Editable, {\n            displayClass: \"app_boards_add-board\",\n            editClass: \"app_boards_add-board_edit\",\n            placeholder: \"Enter Board Name\",\n            text: \"Add Board\",\n            buttonText: \"Add Board\",\n            onSubmit: addboardHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NU6YcSrR0kdlOC9ZEh2vgIGEaio=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saransh/Kanban/src/App.js"],"names":["React","useEffect","useState","Board","Editable","App","data","setData","statusMap","fetch","then","response","json","responseData","addCards","catch","error","console","tickets","map","ticket","idd","status","addCardHandler","id","boards","setBoards","title","cards","targetCard","setTargetCard","bid","cid","addboardHandler","name","tempBoards","push","Date","now","Math","random","removeBoard","index","findIndex","item","splice","labels","date","tasks","removeCard","cardIndex","dragEnded","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Board from \"./Components/Board/Board\";\n\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\n\n\n\n\nfunction App() {\n  \n  const [data, setData] = useState(null);\n\n  const statusMap = {\n    \"Todo\" : 0,\n    \"In progress\" : 1,\n    \"Backlog\":2,\n    \"Cancelled\" : 4\n  };\n  \n   useEffect(() => {\n    // Fetch data from the API and store it in the 'data' state\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment')\n    .then((response) => response.json())\n    .then((responseData) => addCards(responseData))\n    .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  function addCards(responseData){\n    // if(!data) return;\n    setData(responseData);\n    {data.tickets.map((ticket)=>{\n      // console.log(ticket);\n      let idd = statusMap[ticket.status];\n      addCardHandler(idd,ticket.id);\n    })}\n    return;\n  };\n\n  const [boards, setBoards] = useState(\n    [\n      {\n        id:0,\n        title:\"Todo\",\n        cards:[],\n      },\n      {\n        id:1,\n        title:\"In Progress\",\n        cards:[],\n      },\n      {\n        id:2,\n        title:\"Done\",\n        cards:[],\n      },\n      {\n        id:3,\n        title:\"Cancelled\",\n        cards:[],\n      },\n    ]\n  );\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_nav\">\n        <h1>Kanban Board</h1>\n      </div>\n      <div className=\"app_boards_container\">\n        <div className=\"app_boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              addCard={addCardHandler}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              dragEnded={dragEnded}\n              dragEntered={dragEntered}\n              updateCard={updateCard}\n            />\n          ))}\n          <div className=\"app_boards_last\">\n            <Editable\n              displayClass=\"app_boards_add-board\"\n              editClass=\"app_boards_add-board_edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}